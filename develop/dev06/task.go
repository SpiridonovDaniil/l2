package main

import (
	"bufio"
	"flag"
	"fmt"
	"log"
	"os"
	"strings"
)

//Реализовать утилиту аналог консольной команды cut (man cut). Утилита должна принимать строки через STDIN, разбивать по разделителю (TAB) на колонки и выводить запрошенные.
//
//Реализовать поддержку утилитой следующих ключей:
//-f - "fields" - выбрать поля (колонки)
//-d - "delimiter" - использовать другой разделитель
//-s - "separated" - только строки с разделителем

func main() {
	f := flag.Int("f", 1, "выбор поля (колонки)")
	d := flag.String("d", "\t", "использовать другой разделитель")
	s := flag.Bool("s", false, "только строки с разделителем")
	flag.Parse()
	if *f <= 0 { //проверяем флаг выбора колонки на недопустимые значения.
		log.Fatal("f <= 0")
	}
	file, err := os.Open(flag.Arg(0)) //открываем файл по первому аргументу командной строки после обработки файлов.
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()
	sc := bufio.NewScanner(file) //инициализируем новый сканнер.
	for sc.Scan() {              //считываем данные построчно.
		text := sc.Text()                      //получаем данные в виде строки.
		splitText := strings.Split(text, *d)   //разделяем строку по переданному разделителю.
		if *s && !strings.Contains(text, *d) { //проверяем передан ли флаг и содержит ли строка разделитель.
			fmt.Println("") //игнорируем строку.
		} else if len(splitText) < *f { //выводим строку целиком, если номер колонки больше количества полей.
			fmt.Println(text)
		} else {
			fmt.Println(splitText[*f-1]) //пишем в STDOUT запрошенное поле.
		}
	}
}
